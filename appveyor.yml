version: 3.0.{build}
skip_tags: true
image: Visual Studio 2022
configuration: Release

environment:
  SOLUTION_NAME: CEPAberto
  SONAR_TOKEN: 
    secure: FZall4UDTaaxIAcigp9Z4pmSKa1YKxNB/ahexpxsRzKjIOsXBU/Ge1PoU2Qgt1zK
  GITHUB_TOKEN: 
    secure: AD1z81FqZlvGkCEyDzJ3g6sIJ93ecUE9EuqfUxc4CMiFGW139pWZk+/huuTY5jzG
  CODACY_PROJECT_TOKEN:
    secure: jB+7YloyEU1QHmoy/MvUkkaH6cucrrlLnFQww11QxR47GXxpT31wnsDPghqwdIs0
  CODECLIMATE_TOKEN:
    secure: Z6vZGecdLZ2RRqJKWquHgJIrhXvGE5EvQcfTAS/yfuwbQGiSpXMW+++CQlg5vudkQqylPXcl7+1ZosJBhoUJYQuQFBPg0InDySD6c2DDHbA=

assembly_info:
  patch: true
  file: '**\AssemblyInfo.*'
  assembly_version: '{version}'
  assembly_file_version: '{version}'
  assembly_informational_version: '{version}'

init:
- SET JAVA_HOME=C:\Program Files\Java\jdk19
- SET PATH=%JAVA_HOME%\bin;%PATH%

before_build:
- ps: $env:SONAR_PROJECT = "$env:APPVEYOR_REPO_NAME" -replace "/","_"
- ps: $env:SONAR_ORGANIZATION = "$env:APPVEYOR_REPO_NAME" -replace "/.*$","-github"
- cmd: nuget restore
- cmd: choco install "sonarscanner-msbuild-net46" -y
- cmd: choco install opencover.portable
- cmd: choco install codecov
- cmd: curl -L https://github.com/codacy/codacy-coverage-reporter/releases/latest/download/codacy-coverage-reporter-assembly.jar > ./codacy-test-reporter.jar
- cmd: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-windows-amd64 > codeclimate-test-reporter.exe
- cmd: dotnet tool install --global coverlet.console

build:
  publish_nuget: true
  publish_nuget_symbols: true
  include_nuget_references: true
  parallel: true
  verbosity: normal

build_script:
- ps: $Params =  "/k:`"$env:SONAR_PROJECT`"", "/o:`"$env:SONAR_ORGANIZATION`"", "/v:`"$env:APPVEYOR_BUILD_NUMBER`""
- ps: $Params += "/d:sonar.host.url=`"https://sonarcloud.io`"", "/d:sonar.login=`"$env:SONAR_TOKEN`""
- ps: $Params += "/d:sonar.exclusions=`"**/bin/**/*,**/obj/**/*`"", "/d:sonar.coverage.exclusions=`"**/$env:SOLUTION_NAME.Tests/**,**/*Tests.cs`""
- ps: $Params += "/d:sonar.cs.opencover.reportsPaths=`"$env:CD\$env:SOLUTION_NAME.Tests\coverage.opencover.xml`""
- ps: if(-Not $env:APPVEYOR_PULL_REQUEST_NUMBER) { $Params += "/d:sonar.branch.name=`"$env:APPVEYOR_REPO_BRANCH`"" }
- ps: if($env:APPVEYOR_PULL_REQUEST_NUMBER) { $Params += "/d:sonar.pullrequest.key=$env:APPVEYOR_PULL_REQUEST_NUMBER" }
- ps: Start-process "SonarScanner.MSBuild.exe" "begin $($Params -join ' ')"
- codeclimate-test-reporter before-build
- msbuild -m "%SOLUTION_NAME%.sln" /property:Configuration=Release
- nuget pack Src/%SOLUTION_NAME% -Version %APPVEYOR_BUILD_VERSION%
- coverlet CEPAberto.Tests\bin\Release\CEPAberto.Tests.dll
 -t "vstest.console.exe"
 -a "CEPAberto.Tests\bin\Release\CEPAberto.Tests.dll"
 -o "CEPAberto.Tests\\"
 -f opencover
- coverlet CEPAberto.Tests\bin\Release\CEPAberto.Tests.dll
 -t "vstest.console.exe"
 -a "CEPAberto.Tests\bin\Release\CEPAberto.Tests.dll"
 -o "CEPAberto.Tests\\"
 -f lcov
- codeclimate-test-reporter format-coverage -t lcov -o "%CD%\%SOLUTION_NAME%.Tests\code-climate.json" "%CD%\%SOLUTION_NAME%.Tests\coverage.info"
- codeclimate-test-reporter upload-coverage -i "%CD%\%SOLUTION_NAME%.Tests\code-climate.json" -r %CODECLIMATE_TOKEN%
- codecov -f "%CD%\%SOLUTION_NAME%.Tests\coverage.opencover.xml"
- java -jar ./codacy-test-reporter.jar report -l CSharp -t %CODACY_PROJECT_TOKEN% -r "%CD%\%SOLUTION_NAME%.Tests\coverage.opencover.xml"
- SonarScanner.MSBuild.exe end /d:sonar.login="%SONAR_TOKEN%"

after_build:
- xcopy %CD%\%SOLUTION_NAME%\bin\Release\*.* %CD%\Build\

- rd /s /q %CD%\%SOLUTION_NAME%\bin\Release\

- xcopy %CD%\%SOLUTION_NAME%.Tests\*.xml %CD%\Coverage\
- xcopy %CD%\%SOLUTION_NAME%.Tests\*.json %CD%\Coverage\
- xcopy %CD%\%SOLUTION_NAME%.Tests\*.info %CD%\Coverage\

- cd %CD%

- 7z a -tzip -mx9 "%SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.zip" Build
- 7z a -tzip -mx9 "%SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.Coverage.zip" Coverage

artifacts:
- path: "%SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.zip"
  name: ZipFile

- path: $(SOLUTION_NAME).%APPVEYOR_BUILD_VERSION%.nupkg
  name: Package

- path: $(SOLUTION_NAME).%APPVEYOR_BUILD_VERSION%.Coverage.zip
  name: Coverage

deploy:
- provider: Environment
  on:
   branch: main
  name: NuGet
  artifact: Package

- provider: GitHub
  on:
   branch: main
  tag: $(appveyor_build_version)
  auth_token: $(GITHUB_TOKEN)
  force_update: true
  artifact: ZipFile

- provider: GitHub
  on:
   branch: main
  tag: $(appveyor_build_version)
  auth_token: $(GITHUB_TOKEN)
  force_update: true
  artifact: Coverage